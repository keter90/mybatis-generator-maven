<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--执行generator插件生成文件的命令： call mvn mybatis-generator:generate -e -->
    <!-- 引入配置文件 -->
<!--    <properties resource="application.yml"/>-->

    <context id="MySQLTables" targetRuntime="MyBatis3" defaultModelType="flat">
        <!--        配置生成pojo的toString()方法插件-->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin" />
        <!-- 这里的type里写的是你的实现类的类全类名,注：如果不配置type属性,则会使用默认的CommentGenerator实现类DefaultCommentGenerator -->
        <commentGenerator type="com.jd.demo.MyCommentGenerator">
            <!-- 去除自动生成的注释 -->
<!--             <property name="suppressAllComments" value="true" />-->
            <!-- 是否生成注释代时间戳-->
            <property name="suppressDate" value="true"/>
        </commentGenerator>
        <!-- 公共设置 -->
<!--        <commentGenerator>-->
<!--            &lt;!&ndash; 是否取消自动生成时的注释 &ndash;&gt;-->
<!--            <property name="suppressAllComments" value="true"/>-->
<!--            &lt;!&ndash; 是否取消在注释中加上时间 &ndash;&gt;-->
<!--            <property name="suppressDate" value="true"/>-->
<!--        </commentGenerator>-->
        <!-- 链接数据库的配置 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/tableName"
                        userId="userName"
                        password="password"/>

        <!-- 关于生成实体类的设置 -->
        <!-- targetPackage 生成代码的目标目录 -->
        <!-- targetProject 目录所属位置 -->
        <javaModelGenerator targetPackage="com.jd.demo.entity" targetProject="src/main/java">
            <!-- 在targetPackge的基础上根据schema再生成一层package 默认flase -->
            <property name="enableSubPackages" value="true"/>
            <!-- 是否在get方法中 对String类型的字段做空的判断 -->
            <property name="trimStrings" value="true"/>
            <!-- 是否生成一个包含所有字段的构造器 -->
            <property name="constructorBased" value="false"/>
            <!-- 是否创建一个不可变类-->
            <property name="immutable" value="false"/>
        </javaModelGenerator>

        <!--关于生成映射文件的设置-->
        <sqlMapGenerator targetPackage="com.jd.demo.mapper" targetProject="src/main/java">
            <!--同上-->
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!--关于生成mapper层的设置-->
        <javaClientGenerator type="mapper" targetPackage="com.jd.demo.mapper" targetProject="src/main/java">
            <!--同上-->
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!--需要生成的代码对应的表名
            tableName 对应表名
            domainObjectName 实体类名称
             如果设置为true，生成的model类会直接使用column本身的名字，而不会再使用驼峰命名方法，比如BORN_DATE，生成的属性名字就是BORN_DATE,而不会是bornDate
              <property name="useActualColumnNames" value="false"/>
        -->
        <table tableName="tracer_message" domainObjectName="TracerMessage">
            <columnOverride column="result" javaType="Integer"/>
        </table>
    </context>
</generatorConfiguration>
